evaluate-commands %sh{
    kcr init kakoune
    cork init
}

# ========================================
# PLUGINS

cork auto-pairs "https://github.com/alexherbo2/auto-pairs.kak" %{
    enable-auto-pairs
}

cork smarttab.kak "https://github.com/andreyorst/smarttab.kak"

cork kak-rainbower "https://github.com/crizan/kak-rainbower" %{
    set global rainbow_mode 0
    set global rainbow_check_templates Y
}

cork kakoune-mirror "https://github.com/delapouite/kakoune-mirror" %{
    map global normal "'" ": enter-user-mode -lock mirror<ret>"
}

cork kakoune-text-objects "https://github.com/delapouite/kakoune-text-objects"

cork local-kakrc "https://github.com/dgmulf/local-kakrc" %{
    set global source_local_kakrc true
}

cork kakboard "https://github.com/lePerdu/kakboard"

cork kakoune-buffer-switcher "https://github.com/occivink/kakoune-buffer-switcher" %{
    face global BufferSwitcherCurrent green
}

cork kakoune-sort-selections "https://github.com/occivink/kakoune-sort-selections"

cork one.kak "https://github.com/raiguard/one.kak"

cork phantom.kak "https://github.com/raiguard/phantom.kak" %{
    require-module phantom
    phantom-enable
    phantom-add-alternate-mappings
}

cork kakoune-state-save "https://gitlab.com/Screwtapello/kakoune-state-save" %{
    hook global KakBegin .* %{
        # Defaults
        state-save-reg-load colon
        state-save-reg-load pipe
        state-save-reg-load slash
        state-save-reg-load caret

        # Macros
        state-save-reg-load q
        state-save-reg-load w
        state-save-reg-load e
        state-save-reg-load r
        # Generic
        state-save-reg-load a
        state-save-reg-load s
        state-save-reg-load d
        state-save-reg-load f
        # Marks
        state-save-reg-load z
        state-save-reg-load x
        state-save-reg-load c
        state-save-reg-load v
        # Plugins
        state-save-reg-load u
        state-save-reg-load i
        state-save-reg-load o
        state-save-reg-load p
    }

    hook global KakEnd .* %{
        # Defaults
        state-save-reg-save colon
        state-save-reg-save pipe
        state-save-reg-save slash
        state-save-reg-save caret

        # Macros
        state-save-reg-save q
        state-save-reg-save w
        state-save-reg-save e
        state-save-reg-save r
        # Generic
        state-save-reg-save a
        state-save-reg-save s
        state-save-reg-save d
        state-save-reg-save f
        # Marks
        state-save-reg-save z
        state-save-reg-save x
        state-save-reg-save c
        state-save-reg-save v
        # Plugins
        state-save-reg-save u
        state-save-reg-save i
        state-save-reg-save o
        state-save-reg-save p
    }
}

# ========================================
# GENERAL

# Color scheme
colorscheme one-darker
one-enable-fancy-underlines

# Highlighters
addhl global/ number-lines -relative -hlcursor -separator " ‚ñè " -min-digits 4
addhl global/ show-matching
try %{ addhl global/trailing-whitespaces regex "(\h+)$" "1:default,rgba:%opt{darkred}%opt{selectionalpha}" }

# RIP clippy and titles
set global ui_options terminal_assistant=off terminal_set_title=false

# Keep cursor away from the edges
set global scrolloff 5,5

# Auto-reload please!
set global autoreload yes

# Use ripgrep instead of grep
set global grepcmd 'rg -Hn --no-heading --trim'

# ========================================
# EXTERNAL CONFIGURATION

def load -params 2 -hidden %{
    source "%val{config}/%arg{1}/%arg{2}.kak"
}

# TOOLS

# load tool buffer
load tool fandt
load tool git-branch
load tool move-lines
load tool todo

# GENERAL CONFIGURATION

load config commands
load config modes
load config hooks
load config keybindings
load config lsp

# FILETYPES

load filetype cpp
load filetype factorio-changelog
load filetype json
load filetype kak
load filetype lua
load filetype python
load filetype rust
load filetype toml
load filetype ts
load filetype yaml

# IN-DEVELOPMENT PLUGINS

load wip highlighters

source "~/dev/projects/personal/location-list.kak/rc/location-list.kak"
map global user q ": enter-user-mode location-list-alt<ret>"
map global user Q ": enter-user-mode -lock location-list-alt<ret>"
