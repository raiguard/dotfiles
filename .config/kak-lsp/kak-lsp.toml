# GENERAL

verbosity = 2

# LANGUAGES

[language.bash]
filetypes = ["sh"]
roots = [".git", ".hg"]
command = "bash-language-server"
args = ["start"]

[language.c_cpp]
filetypes = ["c", "cpp"]
roots = ["compile_commands.json", ".clangd", ".git", ".hg"]
command = "clangd"
args = ["--limit-references=0"]

[language.css]
filetypes = ["css"]
roots = ["package.json", ".git", ".hg"]
command = "vscode-css-languageserver"
args = ["--stdio"]

[language.go]
filetypes = ["go"]
roots = ["Gopkg.toml", "go.mod", ".git", ".hg"]
command = "gopls"

[language.hare]
filetypes = ["hare"]
roots = [".git/", "Makefile", "hare.ini"]
command = "harepls"

[language.json]
filetypes = ["json"]
roots = ["info.json", "package.json"]
command = "vscode-json-languageserver"
args = ["--stdio"]

[language.json.settings.json]
format.enable = true

[[language.json.settings.json.schemas]]
fileMatch = ["info.json"]
url = "file:///usr/lib/node_modules/factoriomod-debug/schema/modinfo.json"

[language.latex]
filetypes = ["tex", "latex"]
roots = [".git/"]
command = "texlab"

[language.latex.settings.texlab]
build.args = ["--pdf", "%f"]

# [language.lua]
# filetypes = ["lua"]
# roots = [".git/"]
# command = "/home/rai/dev/projects/personal/luapls/luapls"

[language.lua]
filetypes = ["lua"]
roots = [".git/"]
command = "lua-language-server"
args = ["--logpath=/home/rai/.local/share/lua-language-server/log"]

[language.lua.settings.Lua]
diagnostics.disable = ["lowercase-global", "redefined-local"]
diagnostics.severity = { unused-local = "Warning", undefined-global = "Error" }
hover.expandAlias = false
semantic.enable = true
telemetry.enable = false
workspace.userThirdParty = ["/home/rai/dev/.sumneko"]

[language.python]
filetypes = ["python"]
roots = ["requirements.txt", "setup.py", ".git", ".hg"]
command = "pylsp"

[language.rust]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "/home/rai/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rust-analyzer"

[language.rust.settings.rust-analyzer]
checkOnSave.command = "clippy"

[language.scss]
filetypes = ["scss"]
roots = ["package.json", ".git", ".hg"]
command = "vscode-css-languageserver"
args = ["--stdio"]

[language.tsx]
filetypes = ["typescript"]
roots = ["package.json"]
offset_encoding = "utf-8"
command = "typescript-language-server"
args = ['--stdio']

[language.zig]
filetypes = ["zig"]
roots = ["build.zig"]
command = "zls"

# SEMANTIC TOKENS

[[semantic_tokens]]
token = "arithmetic"
face = "operator"

[[semantic_tokens]]
token = "attribute"
face = "function"

[[semantic_tokens]]
token = "attributeBracket"
face = "operator"

[[semantic_tokens]]
token = "boolean"
face = "value"

[[semantic_tokens]]
token = "builtinAttribute"
face = "function"

[[semantic_tokens]]
token = "builtinType"
face = "type"

[[semantic_tokens]]
token = "character"
face = "string"

[[semantic_tokens]]
token = "class"
face = "type"

[[semantic_tokens]]
token = "colon"
face = "operator"

[[semantic_tokens]]
token = "comma"
face = "operator"

[[semantic_tokens]]
token = "comment"
face = "comment"

[[semantic_tokens]]
token = "comparison"
face = "operator"

[[semantic_tokens]]
token = "enum"
face = "module"

[[semantic_tokens]]
token = "enumMember"
face = "enum"

[[semantic_tokens]]
token = "formatSpecifier"
face = "operator"

[[semantic_tokens]]
token = "function"
face = "function"

[[semantic_tokens]]
token = "interface"
face = "module"

[[semantic_tokens]]
token = "keyword"
face = "keyword"

[[semantic_tokens]]
token = "label"
face = "value"

[[semantic_tokens]]
token = "lifetime"
face = "enum"

[[semantic_tokens]]
token = "logical"
face = "operator"

[[semantic_tokens]]
token = "macro"
face = "value"

[[semantic_tokens]]
token = "macroBang"
face = "value"

[[semantic_tokens]]
token = "method"
face = "function"

[[semantic_tokens]]
token = "namespace"
face = "module"

[[semantic_tokens]]
token = "number"
face = "value"

[[semantic_tokens]]
token = "operator"
face = "operator"

[[semantic_tokens]]
token = "parameter"
face = "parameter"

[[semantic_tokens]]
token = "punctuation"
face = "operator"

[[semantic_tokens]]
token = "regexp"
face = "value"

[[semantic_tokens]]
token = "selfKeyword"
face = "value"

[[semantic_tokens]]
token = "selfTypeKeyword"
face = "value"

[[semantic_tokens]]
token = "semicolon"
face = "operator"

[[semantic_tokens]]
token = "string"
face = "string"

[[semantic_tokens]]
token = "struct"
face = "module"

[[semantic_tokens]]
token = "type"
face = "type"

[[semantic_tokens]]
token = "typeAlias"
face = "type"

[[semantic_tokens]]
token = "typeParameter"
face = "operator"

[[semantic_tokens]]
token = "unresolvedReference"
face = "module"

[[semantic_tokens]]
token = "variable"
face = "+s@variable"
modifiers = ["consuming"]

[[semantic_tokens]]
token = "variable"
face = "value"
modifiers = ["static", "constant"]

[[semantic_tokens]]
token = "variable"
face = "variable"
