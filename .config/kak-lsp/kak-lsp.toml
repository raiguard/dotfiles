snippet_support = true
verbosity = 2

[semantic_scopes]
# Map textmate scopes to kakoune faces for semantic highlighting
# the underscores are translated to dots, and indicate nesting.
# That is, if variable_other_field is omitted, it will try the face for
# variable_other and then variable
#
# To see a list of available scopes in the debug buffer, run lsp-semantic-available-scopes
variable = "variable"
entity_name_function = "function"
entity_name_type = "type"
variable_other_enummember = "variable"
entity_name_namespace = "module"

# Semantic tokens support
# See https://github.com/microsoft/vscode-languageserver-node/blob/8c8981eb4fb6adec27bf1bb5390a0f8f7df2899e/client/src/semanticTokens.proposed.ts#L288
# for token/modifier types.

[semantic_tokens]
type = "type"
variable = "variable"
namespace = "module"
function = "function"
string = "string"
keyword = "keyword"
operator = "operator"
comment = "comment"
parameter = "parameter"
enum = "module"
enumMember = "enum"
macro = "function"

[semantic_token_modifiers]
documentation = "documentation"
readonly = "default+d"

# [language.c_cpp]
# filetypes = ["c", "cpp"]
# roots = ["compile_commands.json", ".ccls", ".git"]
# command = "ccls"
# # Disable additional information in autocompletion menus that Kakoune inserts into the buffer until https://github.com/ul/kak-lsp/issues/40 gets fixed
# args = ["--init={\"completion\":{\"detailedLabel\":false}}"]

[language.c_cpp]
filetypes = ["c", "cpp"]
roots = ["compile_commands.json"]
command = "clangd"

[language.lua]
filetypes = ["lua"]
roots = [".git/"]
command = "/home/rai/dev/langservers/sumneko-lua/bin/lua-language-server"
args = ["-E", "/home/rai/dev/langservers/sumneko-lua/main.lua"]

[language.rust]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "rust-analyzer"
