# GENERAL

verbosity = 2
snippet_support = false

# LANGUAGES

[language_server.bash-language-server]
filetypes = ["sh"]
roots = [".git", ".hg"]
command = "bash-language-server"
args = ["start"]

[language_server.clangd]
filetypes = ["c", "cpp"]
roots = ["compile_commands.json", ".clangd", ".git", ".hg"]
command = "clangd"
args = ["-j", "14", "--limit-references=0", "--header-insertion=never", "--pch-storage=memory"]

[language_server.vscode-css-languageserver]
filetypes = ["css", "scss"]
roots = ["package.json", ".git", ".hg"]
command = "vscode-css-languageserver"
args = ["--stdio"]

[language_server.fmtk-locale]
filetypes = ["factorio-locale", "lua"]
roots = ["info.json"]
command = "fmtk"
args = ["lsp", "--stdio"]

[language_server.fmtk-changelog]
filetypes = ["factorio-changelog", "lua"]
roots = ["info.json"]
command = "fmtk"
args = ["lsp", "--stdio"]

[language_server.gopls]
filetypes = ["go"]
roots = ["Gopkg.toml", "go.mod", ".git", ".hg"]
command = "gopls"

[language_server.harepls]
filetypes = ["hare"]
roots = [".git/", "Makefile", "hare.ini"]
command = "harepls"

[language_server.jdtls]
filetypes = ["java"]
roots = [".git/", "Makefile"]
command = "jdtls"

[language_server.jdtls.settings]
# See https://github.dev/eclipse/eclipse.jdt.ls
"java.format.insertSpaces" = true

[language_server.vscode-json-languageserver]
filetypes = ["json"]
roots = ["info.json", "package.json"]
command = "vscode-json-languageserver"
args = ["--stdio"]

[language_server.vscode-json-languageserver.settings.json]
format.enable = true

[[language_server.vscode-json-languageserver.settings.json.schemas]]
fileMatch = ["info.json"]
url = "file:///usr/lib/node_modules/factoriomod-debug/schema/modinfo.json"

[language_server.texlab]
filetypes = ["tex", "latex"]
roots = [".git/"]
command = "texlab"

[language_server.texlab.settings.texlab]
build.args = ["--pdf", "%f"]

# [language_server.luapls]
# filetypes = ["lua"]
# roots = [".git/"]
# command = "/home/rai/dev/personal/luapls/luapls"
# args = ["lsp"]

[language_server.luals]
filetypes = ["lua"]
roots = [".git/"]
command = "lua-language-server"
args = ["--logpath=/home/rai/.local/share/lua-language-server/log"]

[language_server.luals.settings.Lua]
diagnostics.disable = ["lowercase-global", "redefined-local"]
diagnostics.severity = { unused-local = "Error", undefined-global = "Error", undefined-field = "Error" }
hover.expandAlias = false
hover.previewFields = 0
semantic.enable = false
telemetry.enable = false
workspace.userThirdParty = ["/home/rai/dev/luals"]

[language_server.marksman]
filetypes = ["markdown"]
roots = [".kakrc"]
command = "marksman"

[language_server.pylsp]
filetypes = ["python"]
roots = ["requirements.txt", "setup.py", ".git", ".hg"]
command = "pylsp"
settings_section = "_"

[language_server.pylsp.settings._]
pylsp.plugins.pycodestyle.enabled = false

[language_server.rust-analyzer]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "rust-analyzer"

[language_server.rust-analyzer.settings.rust-analyzer]
checkOnSave.command = "clippy"

[language_server.typescript-language-server]
filetypes = ["typescript"]
roots = ["package.json"]
offset_encoding = "utf-8"
command = "typescript-language-server"
args = ['--stdio']

[language_server.zls]
filetypes = ["zig"]
roots = ["build.zig"]
command = "zls"

# SEMANTIC TOKENS

[[semantic_tokens]]
token = "formatSpecifier"
face = "operator"

[[semantic_tokens]]
token = "lifetime"
face = "attribute"

[[semantic_tokens]]
token = "macro"
face = "value"

[[semantic_tokens]]
token = "macroBang"
face = "value"

[[semantic_tokens]]
token = "method"
face = "function"

[[semantic_tokens]]
token = "regexp"
face = "value"

[[semantic_tokens]]
token = "variable"
face = "+s@variable"
modifiers = ["consuming"]

[[semantic_tokens]]
token = "variable"
face = "value"
modifiers = ["globalScope"]
