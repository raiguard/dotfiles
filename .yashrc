# vim: ft=sh

# prediction
set --le-predict --le-prompt-sp

# keybindings
bindkey --vi-insert '\^F' end-of-line
bindkey --vi-insert '\^O' clear-candidates
bindkey --vi-insert '\^B' backward-viword
bindkey --vi-insert '\^L' clear-and-redraw-all
bindkey --vi-insert '\^R' vi-search-backward

# normally yash is more POSIX-compliant than /bin/sh :-)
sh() { yash --posix "$@"; }
yash() { command yash "$@"; }

# ensure job control works as expected
case $- in (*m*)
  trap - TSTP TTIN TTOU
esac

# command history
HISTFILE=~/.yash_history HISTSIZE=5000

# prompt
if [ -n "${SSH_CONNECTION-}" ]; then
  hostcolor='\fy.'     # yellow hostname for SSH remote
else
  hostcolor='\fg.'     # green hostname for local
fi
if [ "$(id -u)" -eq 0 ]; then
  usercolor='\fr.'     # red username for root
else
  usercolor=$hostcolor hostcolor=  # same username color as hostname for non-root user
fi
git_branch() {
    branch=$(git -C "$PWD" rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ -n "$branch" ]; then
        echo " ($branch)"
    fi
}
PS1=$usercolor'$(whoami)'$hostcolor'@$(uname -n)\fd. '\
'$(echo "$PWD" | sed "s/\/home\/rai/~/")'\
'\fc.$(git_branch)\fd.\n$ '
unset hostcolor usercolor
# color predictions as dim
PS1P='\fi.'

# enable zoxide integration
eval "$(zoxide init posix --hook prompt)"

# aliases
alias dmenu="fuzzel -d"
alias n=nnn
alias k="kak"
alias sk="sudoedit"
alias dlg="lazygit --work-tree $HOME --git-dir $HOME/.dotfiles"
alias dgit="git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
alias lg=lazygit
alias ipconfig="nmcli dev show wlan0 | grep IP4"

# PC-specific configuration
if [ -f "~/.yashrc_$(uname -n)" ]; then
  . "~/.yashrc_$(uname -n)"
fi
